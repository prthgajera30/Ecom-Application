generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  passwordHash String
  role         Role     @default(customer)
  createdAt    DateTime @default(now())
  orders       Order[]
  events       Event[]
  addresses    Address[]
}

enum Role {
  customer
  admin
}

model Order {
  id        String      @id @default(uuid())
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  subtotal  Int
  tax       Int
  shipping  Int
  discount  Int      @default(0)
  total     Int
  currency  String
  status    OrderStatus @default(pending)
  createdAt DateTime    @default(now())
  items     OrderItem[]
  payment   Payment?
  shippingAddress   Address?        @relation("OrderAddress", fields: [shippingAddressId], references: [id])
  shippingAddressId String?
  shippingMethod    ShippingMethod? @relation(fields: [shippingMethodId], references: [id])
  shippingMethodId  String?
  promoCode         String?
}

enum OrderStatus {
  pending
  paid
  canceled
}

model OrderItem {
  id        String @id @default(uuid())
  order     Order  @relation(fields: [orderId], references: [id])
  orderId   String
  productId String
  title     String
  image     String?
  price     Int
  qty       Int
}

model Payment {
  id                    String   @id @default(uuid())
  order                 Order    @relation(fields: [orderId], references: [id])
  orderId               String   @unique
  stripePaymentIntentId String
  amount                Int
  status                String
  createdAt             DateTime @default(now())
}

model Address {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  fullName   String
  line1      String
  line2      String?
  city       String
  state      String?
  postalCode String
  country    String
  phone      String?
  isDefault  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  orders     Order[]  @relation("OrderAddress")
}

model ShippingMethod {
  id            String   @id @default(uuid())
  name          String
  description   String?
  rate          Int
  estimatedDays Int?
  active        Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  orders        Order[]
}

model Event {
  id        String   @id @default(uuid())
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  type      String
  payload   Json
  createdAt DateTime @default(now())
}
